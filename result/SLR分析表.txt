{
    "0": {
        "P": 1,
        "D": 2,
        "L": 3,
        "int": "s4",
        "float": "s5",
        "id": "D → ε",
        "if": "D → ε",
        "while": "D → ε",
        "{": "D → ε"
    },
    "1": {
        "$": "acc"
    },
    "2": {
        "S": 6,
        "K": 7,
        "id": "s8",
        "if": "s9",
        "while": "s10",
        "{": "s11"
    },
    "3": {
        "id": "s12"
    },
    "4": {
        "id": "L → int"
    },
    "5": {
        "id": "L → float"
    },
    "6": {
        "$": "K → S",
        "}": "K → S",
        "id": "K → S",
        "if": "K → S",
        "while": "K → S",
        "{": "K → S"
    },
    "7": {
        "M": 13,
        "$": "P → D K",
        "id": "M → ε",
        "if": "M → ε",
        "while": "M → ε",
        "{": "M → ε",
        "(": "M → ε"
    },
    "8": {
        "=": "s14"
    },
    "9": {
        "(": "s15"
    },
    "10": {
        "M": 16,
        "id": "M → ε",
        "if": "M → ε",
        "while": "M → ε",
        "{": "M → ε",
        "(": "M → ε"
    },
    "11": {
        "S": 6,
        "K": 17,
        "id": "s8",
        "if": "s9",
        "while": "s10",
        "{": "s11"
    },
    "12": {
        ";": "s18"
    },
    "13": {
        "S": 19,
        "id": "s8",
        "if": "s9",
        "while": "s10",
        "{": "s11"
    },
    "14": {
        "E": 20,
        "T": 21,
        "F": 22,
        "id": "s23",
        "(": "s24",
        "digits": "s25"
    },
    "15": {
        "C": 26,
        "E": 27,
        "T": 21,
        "F": 22,
        "id": "s23",
        "(": "s24",
        "digits": "s25"
    },
    "16": {
        "(": "s28"
    },
    "17": {
        "M": 13,
        "}": "s29",
        "id": "M → ε",
        "if": "M → ε",
        "while": "M → ε",
        "{": "M → ε",
        "(": "M → ε"
    },
    "18": {
        "D": 30,
        "L": 3,
        "int": "s4",
        "float": "s5",
        "id": "D → ε",
        "if": "D → ε",
        "while": "D → ε",
        "{": "D → ε"
    },
    "19": {
        "$": "K → K M S",
        "}": "K → K M S",
        "id": "K → K M S",
        "if": "K → K M S",
        "while": "K → K M S",
        "{": "K → K M S"
    },
    "20": {
        ";": "s31",
        "+": "s32",
        "-": "s33"
    },
    "21": {
        "*": "s34",
        "/": "s35",
        ";": "E → T",
        ">": "E → T",
        ")": "E → T",
        "<": "E → T",
        "==": "E → T",
        "+": "E → T",
        "-": "E → T"
    },
    "22": {
        ";": "T → F",
        ">": "T → F",
        ")": "T → F",
        "<": "T → F",
        "==": "T → F",
        "+": "T → F",
        "-": "T → F",
        "*": "T → F",
        "/": "T → F"
    },
    "23": {
        ";": "F → id",
        ">": "F → id",
        ")": "F → id",
        "<": "F → id",
        "==": "F → id",
        "+": "F → id",
        "-": "F → id",
        "*": "F → id",
        "/": "F → id"
    },
    "24": {
        "E": 36,
        "T": 21,
        "F": 22,
        "id": "s23",
        "(": "s24",
        "digits": "s25"
    },
    "25": {
        ";": "F → digits",
        ">": "F → digits",
        ")": "F → digits",
        "<": "F → digits",
        "==": "F → digits",
        "+": "F → digits",
        "-": "F → digits",
        "*": "F → digits",
        "/": "F → digits"
    },
    "26": {
        ")": "s37"
    },
    "27": {
        ">": "s38",
        "<": "s39",
        "==": "s40",
        "+": "s32",
        "-": "s33"
    },
    "28": {
        "C": 41,
        "E": 27,
        "T": 21,
        "F": 22,
        "id": "s23",
        "(": "s24",
        "digits": "s25"
    },
    "29": {
        "else": "S → { K }",
        "$": "S → { K }",
        "}": "S → { K }",
        "id": "S → { K }",
        "if": "S → { K }",
        "while": "S → { K }",
        "{": "S → { K }"
    },
    "30": {
        "id": "D → L id ; D",
        "if": "D → L id ; D",
        "while": "D → L id ; D",
        "{": "D → L id ; D"
    },
    "31": {
        "else": "S → id = E ;",
        "$": "S → id = E ;",
        "}": "S → id = E ;",
        "id": "S → id = E ;",
        "if": "S → id = E ;",
        "while": "S → id = E ;",
        "{": "S → id = E ;"
    },
    "32": {
        "T": 42,
        "F": 22,
        "id": "s23",
        "(": "s24",
        "digits": "s25"
    },
    "33": {
        "T": 43,
        "F": 22,
        "id": "s23",
        "(": "s24",
        "digits": "s25"
    },
    "34": {
        "F": 44,
        "id": "s23",
        "(": "s24",
        "digits": "s25"
    },
    "35": {
        "F": 45,
        "id": "s23",
        "(": "s24",
        "digits": "s25"
    },
    "36": {
        ")": "s46",
        "+": "s32",
        "-": "s33"
    },
    "37": {
        "M": 47,
        "id": "M → ε",
        "if": "M → ε",
        "while": "M → ε",
        "{": "M → ε",
        "(": "M → ε"
    },
    "38": {
        "E": 48,
        "T": 21,
        "F": 22,
        "id": "s23",
        "(": "s24",
        "digits": "s25"
    },
    "39": {
        "E": 49,
        "T": 21,
        "F": 22,
        "id": "s23",
        "(": "s24",
        "digits": "s25"
    },
    "40": {
        "E": 50,
        "T": 21,
        "F": 22,
        "id": "s23",
        "(": "s24",
        "digits": "s25"
    },
    "41": {
        ")": "s51"
    },
    "42": {
        "*": "s34",
        "/": "s35",
        ";": "E → E + T",
        ">": "E → E + T",
        ")": "E → E + T",
        "<": "E → E + T",
        "==": "E → E + T",
        "+": "E → E + T",
        "-": "E → E + T"
    },
    "43": {
        "*": "s34",
        "/": "s35",
        ";": "E → E - T",
        ">": "E → E - T",
        ")": "E → E - T",
        "<": "E → E - T",
        "==": "E → E - T",
        "+": "E → E - T",
        "-": "E → E - T"
    },
    "44": {
        ";": "T → T * F",
        ">": "T → T * F",
        ")": "T → T * F",
        "<": "T → T * F",
        "==": "T → T * F",
        "+": "T → T * F",
        "-": "T → T * F",
        "*": "T → T * F",
        "/": "T → T * F"
    },
    "45": {
        ";": "T → T / F",
        ">": "T → T / F",
        ")": "T → T / F",
        "<": "T → T / F",
        "==": "T → T / F",
        "+": "T → T / F",
        "-": "T → T / F",
        "*": "T → T / F",
        "/": "T → T / F"
    },
    "46": {
        ";": "F → ( E )",
        ">": "F → ( E )",
        ")": "F → ( E )",
        "<": "F → ( E )",
        "==": "F → ( E )",
        "+": "F → ( E )",
        "-": "F → ( E )",
        "*": "F → ( E )",
        "/": "F → ( E )"
    },
    "47": {
        "S": 52,
        "id": "s8",
        "if": "s9",
        "while": "s10",
        "{": "s11"
    },
    "48": {
        "+": "s32",
        "-": "s33",
        ")": "C → E > E"
    },
    "49": {
        "+": "s32",
        "-": "s33",
        ")": "C → E < E"
    },
    "50": {
        "+": "s32",
        "-": "s33",
        ")": "C → E == E"
    },
    "51": {
        "M": 53,
        "id": "M → ε",
        "if": "M → ε",
        "while": "M → ε",
        "{": "M → ε",
        "(": "M → ε"
    },
    "52": {
        "N": 54,
        "else": "N → ε",
        "$": "S → if ( C ) M S",
        "}": "S → if ( C ) M S",
        "id": "S → if ( C ) M S",
        "if": "S → if ( C ) M S",
        "while": "S → if ( C ) M S",
        "{": "S → if ( C ) M S"
    },
    "53": {
        "S": 55,
        "id": "s8",
        "if": "s9",
        "while": "s10",
        "{": "s11"
    },
    "54": {
        "else": "s56"
    },
    "55": {
        "else": "S → while M ( C ) M S",
        "$": "S → while M ( C ) M S",
        "}": "S → while M ( C ) M S",
        "id": "S → while M ( C ) M S",
        "if": "S → while M ( C ) M S",
        "while": "S → while M ( C ) M S",
        "{": "S → while M ( C ) M S"
    },
    "56": {
        "M": 57,
        "id": "M → ε",
        "if": "M → ε",
        "while": "M → ε",
        "{": "M → ε",
        "(": "M → ε"
    },
    "57": {
        "S": 58,
        "id": "s8",
        "if": "s9",
        "while": "s10",
        "{": "s11"
    },
    "58": {
        "else": "S → if ( C ) M S N else M S",
        "$": "S → if ( C ) M S N else M S",
        "}": "S → if ( C ) M S N else M S",
        "id": "S → if ( C ) M S N else M S",
        "if": "S → if ( C ) M S N else M S",
        "while": "S → if ( C ) M S N else M S",
        "{": "S → if ( C ) M S N else M S"
    }
}